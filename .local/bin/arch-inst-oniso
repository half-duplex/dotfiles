#!/bin/bash
# Originally by Sean Buckley, sean.bck@gmail.com
set -ex

TARGET="/mnt"
TARGETDEV="/dev/vda"
TARGETPART="$TARGETDEV"1

echo "This will repartition and format $TARGETDEV! Press [Enter] to continue."
read a

dd if=/dev/zero of=$TARGETDEV bs=1024 count=1024 # need known state
echo -ne "mklabel msdos\nmkpart p ext4 0% 100%\nq\n" | parted $TARGETDEV
mkfs.ext4 -F $TARGETPART
e2label $TARGETPART DOROOT # can't change the label on DigitalOcean
mkdir -p $TARGET
mount $TARGETPART $TARGET

cd /tmp
wget https://raw.github.com/mallegonian/mal-configs/master/.bin/arch-inst
echo "Press [Enter] to configure arch-inst"
read a
vi arch-inst
bash arch-inst

arch-chroot $TARGET pacman --noconfirm -Sy kexec-tools
arch-chroot $TARGET pacman --noconfirm -R systemd-sysvcompat

cat >$TARGET/sbin/init <<EOF
#!/bin/sh
kexec --load "/boot/vmlinuz-linux" --initrd="/boot/initramfs-linux.img" --append="root=LABEL=DOROOT init=/usr/lib/systemd/systemd" &&
mount -o ro,remount / &&
kexec -e
exec /usr/lib/systemd/systemd
EOF
chmod 0755 $TARGET/sbin/init

cat >$TARGET/etc/netctl/eth0 <<EOF
Description='My connection'
Interface=eth0
Connection=ethernet
IP=static
Address=('YOUR.IP/24')
Gateway='YOUR.GATEWAY'
DNS=('4.2.2.1')
EOF
echo "Press [Enter] to configure networking"
read a
vi /
arch-chroot $TARGET netctl enable eth0

arch-chroot $TARGET systemctl enable sshd.socket

echo "Assuming everything worked, reboot and SSH in."

